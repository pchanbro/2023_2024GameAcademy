day06

- for 반복문: 특정 횟수만큼 반복
- while 반복문: 특정 조건을 만족할 동안 반복

1. for 반복문

for 변수 in 시퀀스:
  반복코드

1) range 넣기

range(n) -> 0이상 n미만 = n개
range(n, m) -> n이상 m미만
range(n, m, k) -> n이상 m미만 k씩



range(n) 을 사용하면 반복할 코드를 n회 실행할 수 있다

for - range 루프의 과정
(1) range(n) -> 0부터 n미만의 수를 생성
  0, 1, 2, ..., 9

(2) in 앞의 i 변수에 생성된 수를 하나씩 꺼냄
   꺼내서 i 변수에 저장

(3) 하나를 꺼내면 반복 코드가 실행


관습적으로 사용
for문에 사용되는 변수 -> i, j, k, ...
 내부를 반복(순회)하다 -> (i)terate


reversed 함수 -> 증가폭을 음수로 지정할 필요 없이 알아서 뒤집어 준다
range(5) -> 0 1 2 3 4
reversed(range(5)) -> 4 3 2 1 0


2) 시퀀스 넣기: 리스트, 튜플, 문자열

  
입력할 수의 개수를 입력하세요 >>> 3
수 1을 입력하세요 >>> 100
수 2을 입력하세요 >>> 200
수 3을 입력하세요 >>> 300
리스트를 뒤집은 결과는
300 200 100


입력할 수의 개수를 입력하세요 >>> 5
수 1을 입력하세요 >>> 100
수 2을 입력하세요 >>> 200
수 3을 입력하세요 >>> 300
수 4을 입력하세요 >>> 350
수 5을 입력하세요 >>> 360
리스트를 뒤집은 결과는
360 350 300 200 100


문자열을 입력해주세요 >>> python
step 값을 입력해주세요 >>> 2
리스트를 출력한 결과는
['p', 't', 'o']


문자열을 입력해주세요 >>> programming
step 값을 입력해주세요 >>> 3
리스트를 출력한 결과는
['p', 'g', 'm', 'n']



2. while 반복문

조건이 만족할 동안 반복이 계속 수행

while 조건식:
  반복할 코드


random.random()
-> 0 이상 1 미만의 랜덤 실수

random.randint(n, m)
-> n 이상 m """이하"""의 랜덤 정수

4가 나올때까지 계속 랜덤을 출력


2 5
4 4
8 3
16 2
....

j가 0이 되었다면 종료



3. 반복문 제어하기
- break: 부수다
 -> for문이나 while문 내부에서 반복되는 흐름을 벗어난다

- continue
 -> 반복흐름을 유지한 상태에서 건너뛴다

1) break
-> 반복문 안에서 break를 실행하면 그 즉시 종료된다

2) continue
-> 반복문 안에서 continue를 실행하면 continue 이하(반복문 내 한정)의 코드는 실행하지 않고 스킵 -> 그 다음 반복으로 이동


4. 중첩 반복문

반복문 안에 반복문이 들어가는 형태

무한 케이스가 주어질 때
while ~:
  for i in range():


일반적으로 2차원 처리 시
for i in range(): -> 줄 별로 출력 (세로)
  for j in range(): -> 한 줄을 출력 (가로)


중첩 반복문 이용해 출력

*****
*****
*****
*****

*
**
***
****
*****

    *
   **
  ***
 ****
*****










