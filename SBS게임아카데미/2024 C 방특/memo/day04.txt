day04

1. 자료형 변환
- 자료형을 다른 자료형으로 바꾼다

* 묵시적(암묵적) 형변환
  C언어 컴파일러가 수식을 처리할 때 피연산자의 자료형이 다르면 두 피연산자 중 더 큰 형으로 나머지것을 자동 형변환 
 (정수+실수 -> 정수를 실수로 강제 변경)

* 명시적 형변환
  개발자가 피연산자들의 자료형을 통일시키기 위해서 한쪽을 강제로 변환
  (정수+실수 -> 강제로 실수를 정수로 casting)

* 오버플로우와 언더플로우도 형변환


2. typedef 문
type = 형태, def = 정의
-> 사용자 정의 자료형 선언에 사용
-> 기존 자료형에 대해서 새로운 이름을 붙이고자 할 때 사용

typedef 기존이름 새이름;
** 반드시 새이름에서는 띄어쓰기가 있으면 안됨
typedef unsigned long long int uli;


3. enum 상수 (보통 typedef랑 같이 씀)
enumerate 열거형 상수를 정의할 때 사용

enum 태그이름 { 리스트 } 변수이름;

enum Color { red, orange, yellow, green, blue, indigo, purple } rainbow;

또는

enum Color { red, orange, yellow, green, blue, indigo, purple };
enum Color rainbow;

enum 형은 상수 정의 사용
-> 태그 이름은 앞글자만 대문자 ColorName
-> 중괄호 안에 들어가는 리스트가 상수가 됨: 대문자 RED, ORANGE, YELLOW, ...

- 첫 번째 원소가 0부터 시작해서 1씩 증가한다
- 중간에 임의로 값을 대입해주면 해당 값부터 1 증가
  yellow = 20 -> green = 21


4. VS - 디버그 모드 다뤄보기

디버깅: 컴파일+링킹 과정에서 발생한 오류를 수정하는 것

Ctrl + F5 -> 디버그 없이 실행
F5 -> 디버그 모드로 실행
Shift + F5 -> 실행중인 디버깅 정지
Ctrl + Shift + F5 -> 디버깅 재시작

F9 -> 중단점(breakpoint) 설정/해제
F10 -> 프로시저 단위 실행
       (main 함수 기준 한 줄 씩)
F11 -> 라인 단위 실행
       (main 함수에서 호출하는 다른 함수가 있다면 그 함수로 가서 또 실행, 함수 내에서 점검할 사항이 있을 경우)
Shift+F11 -> 함수 단위 점검에서 더 이상 점검할 필요가 없을 경우, 함수를 나올 수 있음

vs.

직접 손으로 printf 문을 써보면서 변수의 값을 확인하는 방식 = 손디버깅 (hand debugging)

5. 조건문

제어문 = 조건문 + 반복문
코드를 특정 조건/반복 횟수에 따라서 제어할 수 있는 구문

조건문
- 주어진 조건의 결과(true, false)에 따라서 프로그램의 실행 순서를 제어한다
- 프로그램의 흐름을 바꾼다

- if-else 문
  * 조건 true/false
  * 2개 이상의 조건을 다루고자 할 때
- switch-case 문
  * 단순한 조건인데 경우가 많은 경우
  * break 문을 이용하여 제어 흐름 바꿀 수 있음
(+goto 문)
  * 특정 위치로 이동해라


6. if-else문

if: 만약에 특정 조건을 만족할 경우 코드 스코프를 실행

if(조건식) {
  조건식이 참이면 코드가 실행된다
}

중괄호 내의 코드가 1문장(; 기준)이면 중괄호 생략이 가능

else: 나머지, if 안의 조건식이 거짓일 경우에 실행되는 코드
else는 반드시 if와 짝이 맞아야 함

if(조건식) {
  조건식이 참이면 실행
} else {
  조건식이 거짓이면 실행
}


중첩 조건문: if/else문 안에 if/else가 있는 경우
-> 여러 조건을 한 번에 만족시킬 때 (&& 로도 가능)

if(나이 >= 20)
  if(키 >= 180)

-> if(나이 >= 20 && 키 >= 180)


if-else if-else

if(조건식1) {
  조건식1이 참일 경우
}
else if(조건식2) { 
  조건식1이 거짓일 경우 + 조건식2가 참인 경우
}
else if(조건식3) {
  조건식1이 거짓 + 조건식2가 거짓일 경우 + 조건식3이 참일 경우
}
else {
  위에 있던 모든 조건식이 전부 거짓
}


CompareTwo.c

수1을 입력하세요 >>>
수2를 입력하세요 >>>

수1>수2인 경우: 수1에 2를 곱해서 출력
수1<수2인 경우: 수2에 3을 곱해서 출력
수1=수2인 경우: Same을 출력


Grade.c

점수를 입력하세요(0~100) >>> 

90~100점 -> A
80~89점 -> B
70~79점 -> C
0~69점 -> F

1) if문만 여러개 쓰는 방식
2) if-else if-else 방식
3) 중첩 if문


7. switch-case 문
- 조건이 단순한데 케이스가 많을 경우
- 연속적으로 실행이 된다
- 연속으로 실행되는 것을 막으려면 반드시 break;를 써주어야 함

변수 == 값1
-> 실행문1 -> 실행문2 -> ... -> 실행문n

switch(변수) {
  case 값1: // 변수 == 값1
    실행문1
    break;
  case 값2: // 변수 == 값2
    실행문2
    break;
  ...
  default: // 위에서 하나도 일치하지 않는 경우
    실행문n
}


SwitchCaseChar.c

int a, b;
char c;
5 + 6

c의 값에 따라서
'+'면 a+b 출력
'-'면 a-b 출력
'*'면 a*b 출력
나머지는 오류입니다.

단순 if문으로만



Tax.c

아래 과세표준액 표를 보고 연봉을 입력했을 때 세금이 얼마인지 계산하는 프로그램을 작성해주세요

과세표준				기본세율
1,400만원 이하			과세표준의 6%
1,400만원 초과~5,000만원 이하	84만원 + (1,400만원 초과금액의 15%)
5,000만원 초과~8,800만원 이하	624만원 + (5,000만원 초과금액의 24%)
8,800만원 초과~1억5천만원 이하	1,536만원 + (8,800만원 초과금액의 35%)
1억5천만원 초과~3억원 이하		3,706만원 + (1억5천만원 초과금액의 38%)
3억원 초과~5억원 이하		9,406만원 + (3억원 초과금액의 40%)
5억원 초과~10억원 이하		17,406만원 + (5억원 초과금액의 42%)
10억원 초과			38,406만원 + (10억원 초과금액의 45%)










